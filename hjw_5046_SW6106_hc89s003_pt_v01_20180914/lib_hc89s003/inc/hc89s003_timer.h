/**
*   ************************************************************************************
*                               普芯达电子有限公司
*                               www.chipswinner.com
*   ************************************************************************************
*   @Demo   Version     V1.0.0.0
*   @Date               2018.8.2
*   ************************************************************************************
**/

/**************************************************************************************/
#include "HC89S003F4.h"
#include "app_cfg"
/**************************************************************************************/
/* TIM0&TIM1定时器控制器 TCON,TCON1(这个寄存器默认值都为0) */
#define TIM_TF1_INT             BIT7    //0/1:TIM1中断响应时硬件自动清0或软件清0 / 计数溢出时硬件置1
#define TIM_TR1                 BIT6    //0/1:TIM1停止工作 / TIM1启动工作
#define TIM_TF0_INT             BIT5    //0/1:TIM0中断响应时硬件自动清0或软件清0 / 计数溢出时硬件置1
#define TIM_TR0                 BIT4    //0/1:TIM0停止工作 / TIM0启动工作

#define TIM_T1OUT               BIT5    //0/1:禁止 / 允许 定时器T1比较输出功能
#define TIM_T1X12_FOSC          BIT4    //0/1:T1定时器时钟为: Fosc/12 / Fosc
#define TIM_T0OUT               BIT1    //0/1:禁止 / 允许定时器T0比较输出功能
#define TIM_T0X12_FOSC          BIT0    //0/1:T0定时器时钟为: Fosc/12 / Fosc

/* TIM0&TIM1定时器工作方式寄存器 TMOD,默认值为0 */
#define TIM_GATE1               BIT7        //0/1:只需软件置TR1即可启动T1 / 只有在INT1端口电平为高电平时TR1置1,T1才工作
#define TIM_CT1                 BIT6        //0/1:T1用于内部定时 / T1用于外部计数
#define TIM_M1_0                B0000_0000  //方式0,16位重装载定时器/计数器
#define TIM_M1_1                B0001_0000  //方式1,16位定时器/计数器
#define TIM_M1_2                B0010_0000  //方式2,8位自动重装初值定时器/计数器
#define TIM_M1_3                B0011_0000  //方式3,T0分成两个(TL0/TH0)独立的8位定时器/计数器,T1停止计数
#define TIM_GATE0               BIT3        //0/1:只需软件置TR0即可启动T0 / 只有在INT0端口电平为高电平时TR0置1,T0才工作
#define TIM_CT0                 BIT2        //0/1:T0用于内部定时 / T0用于外部计数
#define TIM_M0_0                B0000_0000  //方式0,16位重装载定时器/计数器
#define TIM_M0_1                B0000_0001  //方式1,16位定时器/计数器
#define TIM_M0_2                B0000_0010  //方式2,8位自动重装初值定时器/计数器
#define TIM_M0_3                B0000_0011  //方式3,T0分成两个(TL0/TH0)独立的8位定时器/计数器,T1停止计数

/* TIM0&TIM1数据寄存器 TL0,TH0&TL1,TH1 */
/* TL0&TL1 数据寄存器低字节; TH0&TH1 数据寄存器高字节 */

/* TIM3 控制寄存器 T3CON,默认值为0 */
#define TIM_TF3                 BIT7        //0/1:无溢出硬件清0,软件也可以清0 / 溢出硬件置1
#define TIM_T3PDEN              BIT6        //0/1:掉电模式下禁止 / 允许定时器3工作
#define TIM_T3PS_1              B0000_0000  //定时器3预分频 /1
#define TIM_T3PS_8              B0001_0000  //              /8
#define TIM_T3PS_64             B0010_0000  //              /64
#define TIM_T3PS_256            B0011_0000  //              /256
#define TIM_TR3                 BIT2        //0/1:禁止 / 允许定时器3
#define TIM_T3CLKS_FOSC         B0000_0000  //定时器3计数时钟来源选择系统时钟Fosc
#define TIM_T3CLKS_EXT          B0000_0001  //                       T3端口输入外部时钟
#define TIM_T3CLKK_32K          B0000_0010  //                       外部低频晶振32.768KHz

/* TIM3 数据寄存器 TL3,TH3 */

/* TIM4 控制寄存器 T4CON,默认值为0 */
#define TIM_TF4                 BIT7        //0/1:无溢出硬件清0,软件也可以清0 / 溢出硬件置1
#define TIM_TC4                 BIT6        //比较功能允许位
//当T4M[1:0] = 00或01时,0/1:禁止 / 允许 定时器4比较功能
//当T4M[1:0] = 10或11时,0/1:定时器4 不能 / 可以 被再触发
#define TIM_T4PS_1              B0000_0000  //定时器4预分频 /1
#define TIM_T4PS_8              B0001_0000  //              /8
#define TIM_T4PS_64             B0010_0000  //              /64
#define TIM_T4PS_256            B0011_0000  //              /256
#define TIM_T4M_0               B0000_0000  //定时器4方式选择: Mode0,16位自动重载定时器
#define TIM_T4M_1               B0000_0100  //                 Mode1,UART1 波特率发生器
#define TIM_T4M_2               B0000_1000  //                 Mode2,T4端口上升沿触发(只用系统时钟,T4CLKS无效)
#define TIM_T4M_3               B0000_1100  //                 Mode3,T4端口下升沿触发(只用系统时钟,T4CLKS无效)
#define TIM_TR4_DIS             0           //定时器4:禁止
#define TIM_TR4_EN              BIT1        //        允许
#define TIM_T4CLKS_FOSC 0                   //系统时钟Fosc
#define TIM_T4CLKS_EXT          BIT0        //T4端口输入外部时钟
/**************************************************************************************/


/**************************************************************************************/
extern void Timer0_Config(void);
extern void Timer1_Config(void);

/**************************************************************************************/
